#include<stdio.h>
#include<math.h>

void nhap (float A[100][100], int n) {
	int i,j;
	for(i=1; i<=n; i++) {
		for(j=1; j<=n; j++) {
			printf ("A[%d][%d]: ", i,j);
			scanf ("%f",&A[i][j]);
		}
	}
}

void xuat ( float A[100][100], int n) {
	int i,j;
	for (i=1; i<=n; i++) {
		for (j=1; j<=n; j++) {
			printf("%10.3f", A[i][j]);
		}
		printf ("\n");
	}
}

void nhanhaimatran( float A[100][100], float b[100][100], float c[100][100], int n) {
	int i, j, k;
	for (i=1; i<=n; i++) {
		for (j=1; j<=n; j++) {
			c[i][j]=0;
			for (k=1; k<=n; k++) {
				c[i][j] += A[i][k]*b[k][j];
			}
		}
	}
}

void ganmatran ( float A[100][100], float b[100][100], int n ) {
	int i, j;
	for (i=1; i<=n; i++) {
		for (j=1; j<=n; j++) {
			b[i][j]=A[i][j];
		}
	}
}

void tririeng ( float A[100][100], float C[100][100], int n) {
	int i, j, k;
	float b[100][100], m[100][100], m1[100][100];
	
	for(i=1; i<=n; i++) {
		for (j=1; j<=n; j++) {
			if (i==j) C[i][j]=1;
			else C[i][j]=0;
		}
	}
	
	for (k=n-1; k>=1; k--) {
		for (i=1; i<=n; i++) {
			for (j=1; j<=n; j++) {
				if (i!=k) {
					if ( i==j) {
						m[i][j]=1; m1[i][j]=1;
					} else {
						m[i][j]=0; m1[i][j]=0;
					}
				} else {
					m1[i][j]=A[k+1][j];
					if (j==k) {
						m[i][j]=1/A[k+1][k];
					} else {
						m[i][j]=-A[k+1][j]/A[k+1][k];
					}
				}
			}
		}
		nhanhaimatran(m1,A,b,n);
		nhanhaimatran(b,m,A,n);
		nhanhaimatran(C,m,b,n);
		ganmatran(b,C,n);
	}
}

void vector (float y[100][100],int x, int n) {
	int i;
	for (i=1; i<=n; i++) {
		y[i][1]=pow(x,n-i);
	}
}

void xuatvector ( float A[100][100], int n) {
	int i;
	for (i=1; i<=n; i++) {
		printf ("%10.3f", A[i][1]);
	}
}
int main () {
	int n;
	float a,b,c,d,delta,k,x1,x2,x3,x,X,x0;
	float A[100][100], C[100][100];
	float y1[100][100], y2[100][100], y3[100][100];
	float X1[100][100], X2[100][100], X3[100][100];
	printf (" nhap n: "); scanf ("%d", &n);
	printf (" nhap phan tu cua ma tran:\n");
	nhap(A,n);
	printf (" ma tran:\n") ;
	xuat(A,n);
	printf ("\n gia tri rieng cua ma tran P:\n");
	tririeng(A,C,n);
	xuat(A,n);
	printf("\n x^3 + %5.3f.x^2 + %5.3f.x + %5.3f = 0 \n",-A[1][1], -A[1][2], -A[1][3]);
	a=1; b=-A[1][1]; c=-A[1][2]; d=-A[1][3];
	delta = pow(b,2) - 3*a*c;
	k = (9*a*b*c - 2*pow(b,3) - 27*pow(a,2)*d)/ (2*sqrt(abs(pow(delta,3))));
	
	if(delta>0){
		if(fabs(k)<=1) {
		x1 = (2*sqrt(delta)*cos((acos(k)/3)) - b)/ (3*a);
		x2 = (2*sqrt(delta)*cos((acos(k)/3 - (2*M_PI/3))) - b)/(3*a);
		x3 = (2*sqrt(delta)*cos((acos(k)/3 + (2*M_PI/3))) - b)/(3*a);
		printf("\n phuong trinh co 3 ngiem: \nx1=%10.3f \nx2=%10.3f \nx3=%10.3f", x1, x2, x3);}
		else{
		float x0 = ((sqrt(delta)*fabs(k))/(3*a*k))*(pow(fabs(k) + sqrt(pow(k,2) - 1),1.0/3) + pow(fabs(k) - sqrt(pow(k,2) - 1),1.0/3)) - (b/(3*a));
		printf("\n phuong trinh co nghiem duy nhat: %10.3f", x0);
		}
	}
	if(delta=0){
		X = (-b + pow(pow(b,3) - 27*pow(a,2)*d,1/3))/(3*a);
		printf("\n phuong trinh co nghiem boi: %10.3f", X);
	}
	if(delta<0){
		x = (sqrt(abs(delta))/(3*a))*(pow(k + sqrt(pow(k,2) + 1),1/3) + pow(k - sqrt(pow(k,2) + 1),1/3)) - (b/(3*a));
		printf("\n phuong trinh co nghiem duy nhat: %10.3f", x);
	}
	printf ("\n\n"); xuat(C,n);
	printf ("\n");
	vector(y1,x1,n);
	vector(y2,x2,n);
	vector(y3,x3,n);
	nhanhaimatran(C,y1,X1,n);
	nhanhaimatran(C,y2,X2,n);
	nhanhaimatran(C,y3,X3,n);
	printf (" vector rieng x1: ");
	xuatvector (X1,n); printf ("\n\n");
	printf (" vector rieng x2: ");
	xuatvector (X2,n); printf ("\n\n");
	printf (" vector rieng x3: ");
	xuatvector (X3,n); printf ("\n\n");
	return 0;
}
